// Code generated by 'yaegi extract github.com/barab-i/incipio/pkgs/plugin'. DO NOT EDIT.

package symbol

import (
	"github.com/barab-i/incipio/pkgs/plugin"
	"github.com/charmbracelet/bubbletea"
	"reflect"
)

func init() {
	Symbols["github.com/barab-i/incipio/pkgs/plugin/plugin"] = map[string]reflect.Value{
		// type definitions
		"Metadata": reflect.ValueOf((*plugin.Metadata)(nil)),
		"Plugin":   reflect.ValueOf((*plugin.Plugin)(nil)),
		"Result":   reflect.ValueOf((*plugin.Result)(nil)),

		// interface wrapper definitions
		"_Plugin": reflect.ValueOf((*_github_com_barab_i_incipio_pkgs_plugin_Plugin)(nil)),
	}
}

// _github_com_barab_i_incipio_pkgs_plugin_Plugin is an interface wrapper for Plugin type
type _github_com_barab_i_incipio_pkgs_plugin_Plugin struct {
	IValue      interface{}
	WExecute    func(identifier string) tea.Cmd
	WGetError   func() error
	WGetResults func(query string) ([]plugin.Result, error)
	WInit       func() tea.Cmd
	WKeyword    func() string
	WMetadata   func() plugin.Metadata
	WName       func() string
	WUpdate     func(msg tea.Msg) (plugin.Plugin, tea.Cmd)
	WView       func() string
}

func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Execute(identifier string) tea.Cmd {
	return W.WExecute(identifier)
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) GetError() error {
	return W.WGetError()
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) GetResults(query string) ([]plugin.Result, error) {
	return W.WGetResults(query)
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Init() tea.Cmd {
	return W.WInit()
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Keyword() string {
	return W.WKeyword()
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Metadata() plugin.Metadata {
	return W.WMetadata()
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Name() string {
	return W.WName()
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) Update(msg tea.Msg) (plugin.Plugin, tea.Cmd) {
	return W.WUpdate(msg)
}
func (W _github_com_barab_i_incipio_pkgs_plugin_Plugin) View() string {
	return W.WView()
}

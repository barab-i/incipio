package plugin

import tea "github.com/charmbracelet/bubbletea"

// Metadata holds descriptive information about a plugin.
type Metadata struct {
	// Name is the human-readable name of the plugin.
	Name string
	// Description provides a brief explanation of the plugin's purpose.
	Description string
	// Keyword is the string used to activate the plugin (e.g., "!w").
	// An empty string typically indicates a default plugin.
	Keyword string
	// Flag is the command-line flag used to enable this plugin if it's optional.
	Flag string
	// IsMandatory indicates if the plugin must always be loaded.
	IsMandatory bool
	// IsDefault indicates if the plugin should be active by default when no keyword is entered.
	IsDefault bool
}

// Plugin defines the interface that all plugins must implement.
type Plugin interface {
	// Name returns the display name of the plugin.
	Name() string
	// Keyword returns the keyword used to activate the plugin.
	// It should return an empty string if the plugin is intended to be a default plugin.
	Keyword() string
	// Metadata returns the descriptive metadata for the plugin.
	Metadata() Metadata
	// Init initializes the plugin and may return an initial command for the Bubble Tea runtime.
	Init() tea.Cmd
	// GetResults is called when the plugin is active and the input query changes.
	// It should return a list of results based on the query, or an error if one occurs.
	GetResults(query string) ([]Result, error)
	// Execute is called when a user selects a result from this plugin.
	// It should return a command to be executed by the Bubble Tea runtime (e.g., tea.Quit).
	Execute(identifier string) tea.Cmd
	// Update handles Bubble Tea messages, allowing the plugin to manage its internal state
	// and return a new version of itself and any subsequent commands.
	Update(msg tea.Msg) (Plugin, tea.Cmd)
	// View returns a string to be rendered in the UI.
	// For many plugins, this might be an empty string if they rely on the main application's list view.
	View() string
	// GetError returns any persistent error state the plugin might have.
	// This is distinct from errors returned by GetResults, which are typically transient.
	GetError() error
}

// Result represents a single displayable item generated by a plugin.
type Result struct {
	// Title is the main text of the result item.
	Title string
	// Description provides additional context or details for the result item.
	Description string
	// Identifier is a unique string that the plugin uses to identify this specific result,
	// particularly when the Execute method is called.
	Identifier string
}
